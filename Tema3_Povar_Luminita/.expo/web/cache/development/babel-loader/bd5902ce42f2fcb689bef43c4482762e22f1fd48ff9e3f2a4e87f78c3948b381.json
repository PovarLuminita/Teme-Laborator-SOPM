{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ToDoList = function (_Component) {\n  _inherits(ToDoList, _Component);\n  var _super = _createSuper(ToDoList);\n  function ToDoList(props) {\n    var _this;\n    _classCallCheck(this, ToDoList);\n    _this = _super.call(this, props);\n    _this.handleAddTask = function () {\n      var _this$state = _this.state,\n        tasksList = _this$state.tasksList,\n        newTaskInput = _this$state.newTaskInput;\n      if (newTaskInput.trim() !== '') {\n        _this.setState({\n          tasksList: [].concat(_toConsumableArray(tasksList), [newTaskInput]),\n          newTaskInput: ''\n        });\n      }\n    };\n    _this.handleTaskCompletion = function (index) {\n      var completedTasksList = _this.state.completedTasksList;\n      var newCompletedTasksList = _toConsumableArray(completedTasksList);\n      if (newCompletedTasksList.includes(index)) {\n        var indexToRemove = newCompletedTasksList.indexOf(index);\n        newCompletedTasksList.splice(indexToRemove, 1);\n      } else {\n        newCompletedTasksList.push(index);\n      }\n      _this.setState({\n        completedTasksList: newCompletedTasksList\n      });\n    };\n    _this.state = {\n      tasksList: [],\n      newTaskInput: '',\n      completedTasksList: []\n    };\n    return _this;\n  }\n  _createClass(ToDoList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state2 = this.state,\n        tasksList = _this$state2.tasksList,\n        newTaskInput = _this$state2.newTaskInput,\n        completedTasksList = _this$state2.completedTasksList;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: [styles.elementsContainer, styles.purple],\n          children: [_jsx(Text, {\n            style: styles.text,\n            children: \"HELLO, STUDENT!\"\n          }), _jsx(Text, {\n            style: styles.textData,\n            children: \"9.01.2024\"\n          })]\n        }), _jsxs(View, {\n          style: [styles.elementsContainer, styles.white],\n          children: [_jsx(Text, {\n            style: styles.task,\n            children: \"TASKS\"\n          }), _jsx(View, {\n            style: [styles.elementsContainer, styles.purple3]\n          }), tasksList.map(function (task, index) {\n            return _jsxs(TouchableOpacity, {\n              style: styles.taskItem,\n              onPress: function onPress() {\n                return _this2.handleTaskCompletion(index);\n              },\n              children: [_jsx(Text, {\n                style: styles.checkbox,\n                children: completedTasksList.includes(index) ? '‚òëÔ∏è' : 'üî≤'\n              }), _jsx(Text, {\n                style: [styles.taskText, completedTasksList.includes(index) && styles.completedTask],\n                children: task\n              })]\n            }, index);\n          }), _jsx(TextInput, {\n            style: styles.input,\n            value: newTaskInput,\n            onChangeText: function onChangeText(text) {\n              return _this2.setState({\n                newTaskInput: text\n              });\n            },\n            placeholder: \"Adaug\\u0103 un nou task...\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.addButton,\n            onPress: this.handleAddTask,\n            children: _jsx(Text, {\n              style: styles.addButtonText,\n              children: \"ADAUG\\u0102 TASK\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n  return ToDoList;\n}(Component);\nexport { ToDoList as default };\nvar styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 100\n  },\n  elementsContainer: {\n    width: 370,\n    marginBottom: 24,\n    borderRadius: 8,\n    alignItems: 'left'\n  },\n  white: {\n    backgroundColor: '#FFFFFF',\n    padding: 20\n  },\n  purple: {\n    backgroundColor: 'pink',\n    height: 90\n  },\n  purple3: {\n    backgroundColor: 'pink',\n    height: 2\n  },\n  text: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'white'\n  },\n  textData: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'white'\n  },\n  task: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'black'\n  },\n  taskItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  checkbox: {\n    fontSize: 20,\n    marginRight: 20\n  },\n  taskText: {\n    fontSize: 16\n  },\n  completedTask: {\n    textDecorationLine: 'line-through',\n    color: 'black'\n  },\n  input: {\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    backgroundColor: '#FFFFFF',\n    width: '100%'\n  },\n  addButton: {\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    alignItems: 'center'\n  },\n  addButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n};","map":{"version":3,"names":["React","Component","View","Text","TextInput","TouchableOpacity","jsx","_jsx","jsxs","_jsxs","ToDoList","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleAddTask","_this$state","state","tasksList","newTaskInput","trim","setState","concat","_toConsumableArray","handleTaskCompletion","index","completedTasksList","newCompletedTasksList","includes","indexToRemove","indexOf","splice","push","_createClass","key","value","render","_this2","_this$state2","style","styles","container","children","elementsContainer","purple","text","textData","white","task","purple3","map","taskItem","onPress","checkbox","taskText","completedTask","input","onChangeText","placeholder","addButton","addButtonText","default","flex","alignItems","marginTop","width","marginBottom","borderRadius","backgroundColor","padding","height","fontSize","fontWeight","color","flexDirection","marginRight","textDecorationLine","borderColor","borderWidth","paddingHorizontal","paddingVertical"],"sources":["C:/Users/Luminita Povar/appp/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TextInput, TouchableOpacity } from 'react-native';\n\nexport default class ToDoList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasksList: [], // lista goala de sarcini\n      newTaskInput: '', // c√¢mp text gol pentru a adƒÉuga o noua sarcinƒÉ\n      completedTasksList: [], // lista taskurilor finalizate\n    };\n  }\n\n  handleAddTask = () => {\n    const { tasksList, newTaskInput } = this.state;\n    if (newTaskInput.trim() !== '') {\n      this.setState({\n        tasksList: [...tasksList, newTaskInput],\n        newTaskInput: '',\n      });\n    }\n  };\n\n  handleTaskCompletion = (index) => {\n    const { completedTasksList } = this.state;\n    const newCompletedTasksList = [...completedTasksList];\n    if (newCompletedTasksList.includes(index)) {\n      const indexToRemove = newCompletedTasksList.indexOf(index);\n      newCompletedTasksList.splice(indexToRemove, 1);\n    } else {\n      newCompletedTasksList.push(index);\n    }\n    this.setState({ completedTasksList: newCompletedTasksList });\n  };\n\n  render() {\n    const { tasksList, newTaskInput, completedTasksList } = this.state;\n\n    return (\n      <View style={styles.container}>\n        <View style={[styles.elementsContainer, styles.purple]}>\n          <Text style={styles.text}>HELLO, STUDENT!</Text>\n          <Text style={styles.textData}>9.01.2024</Text>\n        </View>\n        <View style={[styles.elementsContainer, styles.white]}>\n          <Text style={styles.task}>TASKS</Text>\n          <View style={[styles.elementsContainer, styles.purple3]}></View>\n          {tasksList.map((task, index) => (\n            <TouchableOpacity\n              key={index}\n              style={styles.taskItem}\n              onPress={() => this.handleTaskCompletion(index)}\n            >\n              <Text style={styles.checkbox}>\n                {completedTasksList.includes(index) ? '‚òëÔ∏è' : 'üî≤'}\n              </Text>\n              <Text\n                style={[\n                  styles.taskText,\n                  completedTasksList.includes(index) && styles.completedTask,\n                ]}\n              >\n                {task}\n              </Text>\n            </TouchableOpacity>\n          ))}\n          <TextInput\n            style={styles.input}\n            value={newTaskInput}\n            onChangeText={(text) => this.setState({ newTaskInput: text })}\n            placeholder=\"AdaugƒÉ un nou task...\"\n          />\n          <TouchableOpacity style={styles.addButton} onPress={this.handleAddTask}>\n            <Text style={styles.addButtonText}>ADAUGƒÇ TASK</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 100,\n  },\n  elementsContainer: {\n    width: 370,\n    marginBottom: 24,\n    borderRadius: 8,\n    alignItems: 'left',\n  },\n  white: {\n    backgroundColor: '#FFFFFF',\n    padding: 20,\n  },\n  purple: {\n    backgroundColor: 'pink',\n    height: 90,\n  },\n  purple3: {\n    backgroundColor: 'pink',\n    height: 2,\n  },\n  text: {\n    fontSize: 40,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'white',\n  },\n  textData: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'white',\n  },\n  task: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'black',\n  },\n  taskItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  checkbox: {\n    fontSize: 20,\n    marginRight: 20,\n  },\n  taskText: {\n    fontSize: 16,\n  },\n  completedTask: {\n    textDecorationLine: 'line-through',\n    color: 'black',\n  },\n  input: {\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 1,\n    borderRadius: 5,\n    marginBottom: 10,\n    paddingHorizontal: 10,\n    backgroundColor: '#FFFFFF',\n    width: '100%',\n  },\n  addButton: {\n    backgroundColor: 'black',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 5,\n    alignItems: 'center',\n  },\n  addButtonText: {\n    color: 'white',\n    fontWeight: 'bold',\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}